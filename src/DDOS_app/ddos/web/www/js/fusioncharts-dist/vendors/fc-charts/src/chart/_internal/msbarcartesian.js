import MSCartesian from'./mscartesian';import Bar2DDataset from'../../dataset/column';import{chartPaletteStr,pluckFontSize,pluck,pluckNumber,preDefStr}from'../../../../fc-core/src/lib';function __feedAxesRawData(){var a,b,c=this,d=c.config,e=c.getFromEnv('color-manager'),f=c.getFromEnv('dataSource'),g=f.chart,h=c.config.is3D,i=h?chartPaletteStr.chart3D:chartPaletteStr.chart2D;return a={isVertical:!0,isReverse:!1,isOpposit:!1,outCanfontFamily:pluck(g.outcnvbasefont,g.basefont,'Verdana,sans'),outCanfontSize:pluckFontSize(g.outcnvbasefontsize,g.basefontsize,10),outCancolor:pluck(g.outcnvbasefontcolor,g.basefontcolor,e.getColor(i.baseFontColor)).replace(/^#? ([a-f0-9]+)/ig,'#$1'),axisNamePadding:g.xaxisnamepadding,maxLabelWidthPercent:g.maxlabelwidthpercent,minLabelWidthPercent:g.minlabelwidthpercent,axisValuePadding:g.labelpadding,axisNameFont:g.xaxisnamefont,axisNameFontSize:g.xaxisnamefontsize,axisNameFontColor:g.xaxisnamefontcolor,axisNameFontBold:g.xaxisnamefontbold,axisNameFontItalic:g.xaxisnamefontitalic,axisNameBgColor:g.xaxisnamebgcolor,axisNameBorderColor:g.xaxisnamebordercolor,axisNameAlpha:g.xaxisnamealpha,axisNameFontAlpha:g.xaxisnamefontalpha,axisNameBgAlpha:g.xaxisnamebgalpha,axisNameBorderAlpha:g.xaxisnameborderalpha,axisNameBorderPadding:g.xaxisnameborderpadding,axisNameBorderRadius:g.xaxisnameborderradius,axisNameBorderThickness:g.xaxisnameborderthickness,axisNameBorderDashed:g.xaxisnameborderdashed,axisNameBorderDashLen:g.xaxisnameborderdashlen,axisNameBorderDashGap:g.xaxisnameborderdashgap,axisNameWidth:g.xaxisnamewidth,useEllipsesWhenOverflow:g.useellipseswhenoverflow,divLineColor:pluck(g.vdivlinecolor,g.divlinecolor,e.getColor(i.divLineColor)),divLineAlpha:pluck(g.vdivlinealpha,g.divlinealpha,h?e.getColor('divLineAlpha3D'):e.getColor('divLineAlpha')),divLineThickness:pluckNumber(g.vdivlinethickness,g.divlinethickness,1),divLineIsDashed:!!pluckNumber(g.vdivlinedashed,g.vdivlineisdashed,g.divlinedashed,g.divlineisdashed,0),divLineDashLen:pluckNumber(g.vdivlinedashlen,g.divlinedashlen,4),divLineDashGap:pluckNumber(g.vdivlinedashgap,g.divlinedashgap,2),showAlternateGridColor:0,alternateGridColor:pluck(g.alternatehgridcolor,e.getColor('altHGridColor')),alternateGridAlpha:pluck(g.alternatehgridalpha,e.getColor('altHGridAlpha')),numDivLines:g.numvdivlines,labelFont:g.labelfont,labelFontSize:g.labelfontsize,labelFontColor:g.labelfontcolor,labelFontAlpha:g.labelalpha,labelFontBold:g.labelfontbold,labelFontItalic:g.labelfontitalic,axisName:g.xaxisname,axisMinValue:g.xaxisminvalue,axisMaxValue:g.xaxismaxvalue,setAdaptiveMin:g.setadaptivexmin,adjustDiv:g.adjustvdiv,labelDisplay:g.labeldisplay,showLabels:g.showlabels,rotateLabels:g.rotatelabels,slantLabel:pluckNumber(g.slantlabels,g.slantlabel),labelStep:pluckNumber(g.labelstep,g.xaxisvaluesstep),showAxisValues:pluckNumber(g.showxaxisvalues,g.showxaxisvalue),showLimits:g.showvlimits,showDivLineValues:pluckNumber(g.showvdivlinevalues,g.showvdivlinevalues),zeroPlaneColor:g.vzeroplanecolor,zeroPlaneThickness:pluckNumber(g.vzeroplanethickness,g.vdivlinethickness,2),zeroPlaneAlpha:pluckNumber(g.vzeroplanealpha,g.vdivlinealpha,d.zeroplanealpha),showZeroPlaneValue:g.showvzeroplanevalue,trendlineColor:g.trendlinecolor,trendlineToolText:g.trendlinetooltext,trendlineThickness:g.trendlinethickness,rotateAxisName:pluckNumber(g.rotatexaxisname,1),trendlineAlpha:g.trendlinealpha,showTrendlinesOnTop:g.showtrendlinesontop,showAxisLine:h?0:pluckNumber(g.showxaxisline,g.showaxislines,g.drawAxisLines,0),axisLineThickness:pluckNumber(g.xaxislinethickness,g.axislinethickness,1),axisLineAlpha:pluckNumber(g.xaxislinealpha,g.axislinealpha,100),axisLineColor:pluck(g.xaxislinecolor,g.axislinecolor,'#000000')},b={isVertical:!1,isReverse:!1,isOpposit:!1,outCanfontFamily:pluck(g.outcnvbasefont,g.basefont,'Verdana,sans'),outCanfontSize:pluckFontSize(g.outcnvbasefontsize,g.basefontsize,10),outCancolor:pluck(g.outcnvbasefontcolor,g.basefontcolor,e.getColor(i.baseFontColor)).replace(/^#? ([a-f0-9]+)/ig,'#$1'),axisNamePadding:g.yaxisnamepadding,axisValuePadding:g.yaxisvaluespadding,axisNameFont:g.yaxisnamefont,axisNameFontSize:g.yaxisnamefontsize,axisNameFontColor:g.yaxisnamefontcolor,axisNameFontBold:g.yaxisnamefontbold,axisNameFontItalic:g.yaxisnamefontitalic,axisNameBgColor:g.yaxisnamebgcolor,axisNameBorderColor:g.yaxisnamebordercolor,axisNameAlpha:g.yaxisnamealpha,axisNameFontAlpha:g.yaxisnamefontalpha,axisNameBgAlpha:g.yaxisnamebgalpha,axisNameBorderAlpha:g.yaxisnameborderalpha,axisNameBorderPadding:g.yaxisnameborderpadding,axisNameBorderRadius:g.yaxisnameborderradius,axisNameBorderThickness:g.yaxisnameborderthickness,axisNameBorderDashed:g.yaxisnameborderdashed,axisNameBorderDashLen:g.yaxisnameborderdashlen,axisNameBorderDashGap:g.yaxisnameborderdashgap,axisNameWidth:g.yaxisnamewidth,useEllipsesWhenOverflow:g.useellipseswhenoverflow,axisName:g.yaxisname,divLineColor:pluck(g.divlinecolor,e.getColor(i.divLineColor)),divLineAlpha:pluck(g.divlinealpha,h?e.getColor('divLineAlpha3D'):e.getColor('divLineAlpha')),divLineThickness:pluckNumber(g.divlinethickness,1),divLineIsDashed:!!pluckNumber(g.divlinedashed,g.divlineisdashed,0),divLineDashLen:pluckNumber(g.divlinedashlen,4),divLineDashGap:pluckNumber(g.divlinedashgap,2),showAlternateGridColor:pluckNumber(g.showalternatevgridcolor,1),alternateGridColor:pluck(g.alternatevgridcolor,e.getColor('altVGridColor')),alternateGridAlpha:pluck(g.alternatevgridalpha,e.getColor('altVGridAlpha')),numDivLines:g.numdivlines,axisMinValue:g.yaxisminvalue,axisMaxValue:g.yaxismaxvalue,setAdaptiveMin:g.setadaptiveymin,adjustDiv:g.adjustdiv,labelStep:g.yaxisvaluesstep,showAxisValues:pluckNumber(g.showyaxisvalues,g.showyaxisvalue),showLimits:pluckNumber(g.showyaxislimits,g.showlimits,c.showLimits),showDivLineValues:pluckNumber(g.showdivlinevalues,g.showdivlinevalue),zeroPlaneColor:g.zeroplanecolor,zeroPlaneThickness:pluckNumber(g.zeroplanethickness,g.divlinethickness,2),zeroPlaneAlpha:pluckNumber(g.zeroplanealpha,g.divlinealpha,d.zeroplanealpha),showZeroPlaneValue:g.showzeroplanevalue,trendlineColor:g.trendlinecolor,trendlineToolText:g.trendlinetooltext,trendlineThickness:g.trendlinethickness,trendlineAlpha:g.trendlinealpha,isTrendZone:0,showTrendlinesOnTop:g.showtrendlinesontop,showAxisLine:h?0:pluckNumber(g.showyaxisline,g.showaxislines,g.drawAxisLines,0),axisLineThickness:pluckNumber(g.yaxislinethickness,g.axislinethickness,1),axisLineAlpha:pluckNumber(g.yaxislinealpha,g.axislinealpha,100),axisLineColor:pluck(g.yaxislinecolor,g.axislinecolor,'#000000'),numberFormatterFn:'yAxis',showZeroPlaneOnTop:d.showzeroplaneontop,forceTrendBelow:!!d.is3D},b.vtrendlines=f.trendlines,a.trendlines=f.vtrendlines,d.isstacked&&(b.isPercent=pluckNumber(d.stack100percent,0)),{xAxisConf:[a],yAxisConf:[b]}}function __spaceManager(){var a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t=this,u=t.config,v=t.getChildren(),w=v.yAxis&&v.yAxis[0],x=v.xAxis&&v.xAxis||[],y=preDefStr.POSITION_BOTTOM,z=u.legendposition,A=u.xDepth,B=u.yDepth,C=v.canvas[0],D=u.canvasBgDepth,E=u.canvasBaseDepth,F=u.canvasBasePadding,G=v.canvas[0].config.canvasBorderWidth,H=u.realTimeConfig&&u.realTimeConfig.showRTValue,I=u.borderWidth,J=u.canvasMarginTop,K=u.canvasMarginBottom,L=u.canvasMarginLeft,M=u.canvasMarginRight,N=u.minCanvasHeight,O=u.minCanvasWidth,P=u.minChartWidth,Q=u.minChartHeight,R=u.height,S=u.width,T=!1,U=!1,V=u.origCanvasTopMargin,W=u.origCanvasBottomMargin,X=u.origCanvasLeftMargin,Y=u.origCanvasRightMargin;u.canvasWidth-2*I<P&&(l=(u.canvasWidth-P)/2),u.canvasHeight-2*I<Q&&(k=(u.canvasHeight-Q)/2),t._allocateSpace({top:k||I,bottom:k||I,left:l||I,right:l||I}),c=x[0],a=.7*u.availableWidth,u.yAxisSpaceAllocation=q=c&&c.placeAxis(a),c&&t._allocateSpace(q),o=.225*u.availableHeight,n=t._manageActionBarSpace&&t._manageActionBarSpace(o)||{},t._allocateSpace(n),t._manageLegendSpace&&t._manageLegendSpace(),b=z===y?.6*u.availableHeight:.6*u.availableWidth,B&&(t._allocateSpace({left:B}),u.shift=A+F+E),D&&t._allocateSpace({top:D}),u.canvasWidth-2*G<O&&(p=(u.canvasWidth-O)/2),t._allocateSpace({left:p||G,right:p||G}),O>S-L-M&&(U=!0,d=u.canvasWidth-O,s=L+M,L=u.canvasMarginLeft=d*L/s,M=u.canvasMarginRight=d*M/s),g=L>u.canvasLeft?L-u.canvasLeft:0,h=M>S-u.canvasRight?M+u.canvasRight-S:0,t._allocateSpace({left:g,right:h}),t._allocateSpace({left:E}),U&&(s=X+Y,j=u.canvasWidth,j>O&&(d=j-O,g=d*X/s,h=d*Y/s),t._allocateSpace({left:g,right:h})),u.actualCanvasMarginRight=h,u.actualCanvasMarginBottom=f,t._manageChartMenuBar(b),b=.2*u.availableHeight,t._allocateSpace(t._getSumValueSpace(b)),b=.3*u.availableHeight,u.realtimeEnabled&&(H?t._allocateSpace(t._realTimeValuePositioning(b)):t._hideRealTimeValue()),b=.6*u.availableHeight,u.xAxisSpaceAllocation=r=w&&w.placeAxis(b),w&&t._allocateSpace(r),b=.3*u.availableHeight,t._manageScrollbarPosition&&t._manageScrollbarPosition(b),u.canvasHeight-2*G<N&&(m=(u.canvasHeight-N)/2),t._allocateSpace({top:m||G,bottom:m||G}),N>R-J-K&&(T=!0,d=u.canvasHeight-N,s=J+K,J=u.canvasMarginTop=d*J/s,K=u.canvasMarginBottom=d*K/s),e=J>u.canvasTop?J-u.canvasTop:0,f=K>R-u.canvasBottom?K+u.canvasBottom-R:0,t._allocateSpace({top:e,bottom:f}),T&&(s=V+W,i=u.canvasHeight,i>N&&(d=i-N,e=d*V/s,f=d*W/s),t._allocateSpace({top:e,bottom:f})),u.actualCanvasMarginTop=e,u.actualCanvasMarginLeft=g,C.setDimension({top:u.canvasTop,left:u.canvasLeft,width:u.canvasWidth,height:u.canvasHeight})}function __postSpaceManagement(){var a,b,c,d,e=this,f=e.config,g=e.getChildren(),h=g.xAxis&&g.xAxis[0],i=g.yAxis&&g.yAxis[0],j=g.legend&&g.legend[0],k=f.xDepth,l=g.canvas[0].config,m=l.canvasBorderWidth,n=l.canvasPadding,o=Math,p=o.max;i&&e._allocateXAxisLabelSpace(i),a=l.canvasPaddingLeft,b=l.canvasPaddingRight,c=l.canvasPaddingTop,d=l.canvasPaddingBottom,i&&i.setAxisDimention({x:l.canvasLeft+a,y:l.canvasTop+l.canvasHeight+m,opposite:l.canvasTop-m,axisLength:l.canvasWidth-a-b}),h&&h.setAxisDimention({x:l.canvasLeft-(f.shift||0)-m,y:l.canvasTop+(k||0)+p(c,n),opposite:l.canvasRight+m,axisLength:l.canvasHeight-(k||0)-p(c,n)-p(d,n)}),j&&j.postSpaceManager(),e.allocateDimensionOfChartMenuBar()}class MSBarCartesian extends MSCartesian{getName(){return'MSBarCartesian'}static getName(){return'MSBarCartesian'}__setDefaultConfig(){super.__setDefaultConfig(),this.config.enablemousetracking=!0}_feedAxesRawData(){return __feedAxesRawData.call(this)}_spaceManager(){__spaceManager.call(this)}_postSpaceManagement(){__postSpaceManagement.call(this)}getDSdef(){return Bar2DDataset}getDSGroupdef(){}}export{__feedAxesRawData,__spaceManager,__postSpaceManagement};export default MSBarCartesian;