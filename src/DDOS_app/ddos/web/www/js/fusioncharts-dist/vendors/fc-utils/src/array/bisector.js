const ascending=(c,a)=>{let b=NaN;return c<a?b=-1:c>a?b=1:c>=a&&(b=0),b},ascendingComparator=a=>(b,c)=>ascending(a(b),c),bisector=a=>{var b=Math.abs,c=Math.floor;let d=a;return 1===d.length&&(d=ascendingComparator(d)),{left:(a=[],e,f=0,g=a.length)=>{let h=f,i=g;for(;h<i;){const f=b(c((h+i)/2));0>d(a[f],e)?h=f+1:i=f}return h},right:(a=[],e,f=0,g=a.length)=>{let h=f,i=g;for(;h<i;){const f=b(c((h+i)/2));0<d(a[f],e)?i=f:h=f+1}return h}}};export default bisector;