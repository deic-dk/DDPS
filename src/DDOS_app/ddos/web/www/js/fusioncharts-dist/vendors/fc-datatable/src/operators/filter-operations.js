import{leftMostExactOrGreater,rightMostExactOrLesser}from'../utils/sorted-search';import{columnIndexOf}from'../utils/datatable-utils';import{OperatorTypes}from'./type-enums';import{numberComparator,stringComparator}from'../utils/comparators';function indexColBetween(c,a,b,d){let e=a,f=b;return{ops:'indexColBetween',type:OperatorTypes.IndexOpsFilter,_updateArgs:(a,b)=>{e=a,f=b},fn:(a,b,g,h)=>{h&&(a=h.call()),d||(d=_getIndexColComparer(b,c));let i,j,k;return k='interval'===b[c].type?(d,a)=>numberComparator(d[c].end,a):d,i=leftMostExactOrGreater(e,a,d,0,a.length),j=rightMostExactOrLesser(f,a,k,i,a.length),{data:a,schema:b,config:g,generatorFn:()=>a.slice(i,j+1)}}}}function between(a,b,c){let d=b,e=c;return{ops:'between',type:OperatorTypes.GenericFilter,_updateArgs:(a,b)=>{d=a,e=b},fn:(b,c,f,g)=>{g&&(b=g.call());let h,i=columnIndexOf(a,c);if(0<=i){if(h=_getIndexColComparer(c,i),f&&f.indexBy===a){let a=indexColBetween(i,d,e,h);return a.fn(b,c,f)}return{data:b,schema:c,config:f,generatorFn:()=>b.filter(a=>0<=h(a,d)&&0>=h(a,e))}}throw new Error('Column \''+a+'\' is not found in the schema.')}}}function indexColEquals(a,b,c){let d=b;return{ops:'indexColEquals',type:OperatorTypes.IndexOpsFilter,_updateArgs:a=>{d=a},fn:(b,e,f,g)=>{g&&(b=g.call()),c||(c=_getIndexColComparer(e,a));let h,i;return(h=leftMostExactOrGreater(d,b,c,0,b.length),h>=b.length||0!==c(b[h],d))?{data:[],schema:e,config:f}:(i=rightMostExactOrLesser(d,b,c,h,b.length),{data:b,schema:e,config:f,generatorFn:()=>b.slice(h,i+1)})}}}function equals(a,b){let c=b;return{ops:'equals',type:OperatorTypes.GenericFilter,_updateArgs:a=>{c=a},fn:(b,d,e,f)=>{f&&(b=f.call());let g,h=columnIndexOf(a,d);if(0<=h){if(g=_getIndexColComparer(d,h),e&&e.indexBy===a){let a=indexColEquals(h,c,g);return a.fn(b,d,e)}return{data:b,schema:d,config:e,generatorFn:()=>b.filter(a=>0===g(a,c))}}throw new Error('Column \''+a+'\' is not found in the schema.')}}}function indexColLess(a,b,c){let d=b;return{ops:'indexColLess',type:OperatorTypes.IndexOpsFilter,_updateArgs:a=>{d=a},fn:(b,e,f,g)=>{g&&(b=g.call()),c||(c=_getIndexColComparer(e,a));let h=leftMostExactOrGreater(d,b,c,0,b.length);return{data:b,schema:e,config:f,generatorFn:()=>b.slice(0,h)}}}}function less(a,b){let c=b;return{ops:'less',type:OperatorTypes.GenericFilter,_updateArgs:a=>{c=a},fn:(b,d,e,f)=>{f&&(b=f.call());let g,h=columnIndexOf(a,d);if(0<=h){if(g=_getIndexColComparer(d,h),e&&e.indexBy===a){let a=indexColLess(h,c,g);return a.fn(b,d,e)}return{data:b,schema:d,config:e,generatorFn:()=>b.filter(a=>0>g(a,c))}}throw new Error('Column \''+a+'\' is not found in the schema.')}}}function indexColLessEquals(a,b,c){let d=b;return{ops:'indexColLessEquals',type:OperatorTypes.IndexOpsFilter,_updateArgs:a=>{d=a},fn:(b,e,f,g)=>{g&&(b=g.call()),c||(c=_getIndexColComparer(e,a));let h=rightMostExactOrLesser(d,b,c,0,b.length);return{data:b,schema:e,config:f,generatorFn:()=>b.slice(0,h+1)}}}}function lessEquals(a,b){let c=b;return{ops:'lessEquals',type:OperatorTypes.GenericFilter,_updateArgs:a=>{c=a},fn:(b,d,e,f)=>{f&&(b=f.call());let g,h=columnIndexOf(a,d);if(0<=h){if(g=_getIndexColComparer(d,h),e&&e.indexBy===a){let a=indexColLessEquals(h,c,g);return a.fn(b,d,e)}return{data:b,schema:d,config:e,generatorFn:()=>b.filter(a=>0>=g(a,c))}}throw new Error('Column \''+a+'\' is not found in the schema.')}}}function indexColGreater(a,b,c){let d=b;return{ops:'indexColGreater',type:OperatorTypes.IndexOpsFilter,_updateArgs:a=>{d=a},fn:(b,e,f,g)=>{g&&(b=g.call()),c||(c=_getIndexColComparer(e,a));let h=rightMostExactOrLesser(d,b,c,0,b.length),i=leftMostExactOrGreater(null,b,c,h,b.length);return{data:b,schema:e,config:f,generatorFn:()=>b.slice(h+1,i)}}}}function greater(a,b){let c=b;return{ops:'greater',type:OperatorTypes.GenericFilter,_updateArgs:a=>{c=a},fn:(b,d,e,f)=>{f&&(b=f.call());let g,h=columnIndexOf(a,d);if(0<=h){if(g=_getIndexColComparer(d,h),e&&e.indexBy===a){let a=indexColGreater(h,c,g);return a.fn(b,d,e)}return{data:b,schema:d,config:e,generatorFn:()=>b.filter(a=>null!==a[h]&&'undefined'!=typeof a[h]&&0<g(a,c))}}throw new Error('Column \''+a+'\' is not found in the schema.')}}}function indexColGreaterEquals(a,b,c){let d=b;return{ops:'indexColGreaterEquals',type:OperatorTypes.IndexOpsFilter,_updateArgs:a=>{d=a},fn:(b,e,f,g)=>{g&&(b=g.call()),c||(c=_getIndexColComparer(e,a));let h=leftMostExactOrGreater(d,b,c,0,b.length),i=leftMostExactOrGreater(null,b,c,h,b.length);return{data:b,schema:e,config:f,generatorFn:()=>b.slice(h,i)}}}}function greaterEquals(a,b){let c=b;return{ops:'greaterEquals',type:OperatorTypes.GenericFilter,_updateArgs:a=>{c=a},fn:(b,d,e,f)=>{f&&(b=f.call());let g,h=columnIndexOf(a,d);if(0<=h){if(g=_getIndexColComparer(d,h),e&&e.indexBy===a){let a=indexColGreaterEquals(h,c,g);return a.fn(b,d,e)}return{data:b,schema:d,config:e,generatorFn:()=>b.filter(a=>null!==a[h]&&'undefined'!=typeof a[h]&&0<=g(a,c))}}throw new Error('Column \''+a+'\' is not found in the schema.')}}}let _getIndexColComparer=(a,c)=>{switch(a[c].type){case'interval':return(d,a)=>numberComparator(d[c].start,a);case'number':case'date':return(d,a)=>numberComparator(d[c],a);default:return(d,a)=>stringComparator((d[c]+'').toLowerCase(),(a+'').toLowerCase());}};export{indexColBetween,between,indexColEquals,equals,indexColLess,less,indexColLessEquals,lessEquals,indexColGreater,greater,indexColGreaterEquals,greaterEquals};