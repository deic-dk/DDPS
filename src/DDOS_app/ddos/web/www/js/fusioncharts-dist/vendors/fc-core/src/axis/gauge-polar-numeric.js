import Axis from'./axis';import{pluck,pluckNumber,parseUnsafeString,convertColor}from'../lib';import{setDataLimit,getTrendLineLimits}from'./common-api';import domainUpdater from'./domain-updater';class GaugePolarNumeric extends Axis{__setDefaultConfig(){super.__setDefaultConfig();let a=this.config;a.majorTMNumber=-1,a.adjustDiv=1,a.majorTMHeight=6,a.showTickMarks=1,a.majorTMThickness=1,a.minorTMNumber=4,a.minorTMThickness=1,a.tickMarkDistance=3,a.placeTicksInside=0,a.placeValuesInside=0,a.forceZeroTick=!1}configureAttributes(a){var b,c=Math.round,d=this,e=d.config,f=d.getFromEnv('color-manager');super.configureAttributes(a),b=e.rawAttr,e.majorTMColor=convertColor(pluck(b.majorTMColor,f.getColor('tickColor')),pluckNumber(b.majorTMAlpha,100)),e.tickValueStep=pluckNumber(b.tickValueStep,1),e.tickValueStep=c(e.tickValueStep),0>=e.tickValueStep&&(e.tickValueStep=1),e.connectTickMarks=e.showTickMarks?pluckNumber(b.connectTickMarks,1):0,e.showTickValues=pluckNumber(b.showTickValues,e.showTickMarks),e.reverseScale=1===pluckNumber(b.reverseScale,0),e.minorTMColor=convertColor(pluck(b.minorTMColor,e.majorTMColor),pluckNumber(b.minorTMAlpha,e.majorTMAlpha,100)),e.minorTMHeight=e.showTickMarks?pluckNumber(b.minorTMHeight,c(e.majorTMHeight/2)):0,e.tickValueDistance=pluckNumber(b.tickValueDistance,0)+2,e.upperLimitDisplay=parseUnsafeString(b.upperLimitDisplay)||'',e.lowerLimitDisplay=parseUnsafeString(b.lowerLimitDisplay)||'',e.drawTickMarkConnector=b.drawTickMarkConnector||0,e.numDivLines=0<=e.majorTMNumber?e.majorTMNumber:e.numDivLines+1}_createContainer(){let a,b,c,d,e=this,f=e.config,g=e.getLinkedParent(),h=g.getChildContainer(),i=h.axisBottomGroup,j=h.axisTopGroup;d=this.createContainer('axisTrendGroupBottom',{name:'dataset-Trend-group-bottom'},i),a=e.createContainer('axisLineGroup',{name:'axis-Line-group'},j),b=e.createContainer('axisTrendGroupTop',{name:'dataset-Trend-group-top'},j),c=e.createContainer('axisLabelGroupTop',{name:'dataset-Label-group'},j),f.axisLabelContainerTop=f.axisContainer=e.createGroup('axisLabelContainerTop',{name:'dataset-top-label'},c),f.axisAxisLineContainer=e.createGroup('axisAxisLineContainer',{name:'axis-line-tick'},a),f.axisTrendContainerTop=e.createGroup('axisTrendContainerTop',{name:'dataset-axis-trend-top'},b),f.axisTrendContainerBottom=e.createGroup('axisTrendContainerBottom',{name:'dataset-axis-trend-bottom'},d),f.axisTrendLabelContainer=e.createGroup('axisTrendLabelContainer',{name:'dataset-axis-trend-label'},b)}allocatePosition(){var a=this,b=a.config;b.drawLabels&&a._parseLabel()}setVisibleConfig(a,b){let c,d=this,e=d.config,f=d.getScale();return!(a>=b||a<e.axisRange.min||b>e.axisRange.max)&&(c=f.setDomain([a,b]).getDomain(),e.visibleMin=c[0],e.visibleMax=c[1],d.fireEvent('visiblerangeset',{minValue:a,maxValue:b}),d.asyncDraw(),!0)}_adjustNumberFormatter(){if(this)return 0}calculateTicksOnLabelMode(){if(this)return 0}generateMinorTicks(){let a=this,b=this.config;return a.getScale().minorTicks(b.minorTMNumber,b.ticks)}_setAxisRange(a){var b=a.min,c=a.max,d=this.config,e=d.axisRange;b>c||(domainUpdater(b,c,this.getScale(),d),d.minorTicks=this.generateMinorTicks(),this.setVisibleConfig(e.min,e.max))}}GaugePolarNumeric.prototype.setDataLimit=setDataLimit,GaugePolarNumeric.prototype.getTrendLineLimits=getTrendLineLimits;export default GaugePolarNumeric;