import{ComponentInterface}from'../component-interface';import{toRaphaelColor,RGBtoHex,HEXtoRGB}from'../lib';let UNDEF,COMMA_STR=',',getColorBetween=(a,b,c)=>{var d,e,f=Math.round,g=a.value,h=a.code,i=HEXtoRGB(h),j=b.value,k=b.code,l=HEXtoRGB(k);return d=j-g,e=[f(i[0]+(l[0]-i[0])/d*(c-g)),f(i[1]+(l[1]-i[1])/d*(c-g)),f(i[2]+(l[2]-i[2])/d*(c-g))],RGBtoHex(e)};class GradientColorRange extends ComponentInterface{constructor(){super(),this.colorRange={},this.valueRatio={},this.data={},this.mapByPercent=void 0}getType(){return'colorComponent'}getName(){return'gradientColorRange'}configure(a){if(!a)return;let b,c,d,e=this;for(e.data=a,e.appender='',d=e.colorRange=a.colorRange.sort(function(a,b){return a.value-b.value}),e.valueRatio=UNDEF,e.values=[],(b=0,c=d.length);b<c;b++)e.values.push(d[b].value)}getValueRatio(){var a,b,c,d=this.colorRange,e=d.length,f=this.valueRatio,g=d[e-1].value,h=d[0].value,i=0;if(f)return f;for(f=this.valueRatio=[],b=0;b<e;b++)a=d[b],c=(a.value-h)/(g-h),f.push(100*(c-i)),i=c;return f}getCumulativeValueRatio(){var a,b,c=this.colorRange,d=c.length,e=c[0].value,f=c[d-1].value,g=[];for(b=0;b<d;b++)a=c[b],g.push(100*((a.value-e)/(f-e)));return g}getBoxFill(a){var b,c,d,e,f=this.colorRange,g=f.length,h=[];for(e=a?90:0,c=0;c<g;c++)b=f[c],h.push(b.code);return d={FCcolor:{alpha:'100,100,100',angle:e,color:h.join(COMMA_STR),ratio:this.getValueRatio().join(COMMA_STR)}},toRaphaelColor(d)}getColorByValue(a){var b,c,d,e,f=this.values,g=this.colorRange;if(a!==UNDEF&&null!==a){for(c=0,b=f.length;c<b;c++)if(a===f[c]){e=g[c].code;break}else if(!c&&a<f[c]){d=!0;break}else if(c===b-1&&a>f[c]){d=!0;break}else if(a>f[c]&&a<f[c+1]){e=getColorBetween(g[c],g[c+1],a);break}return d?void 0:e}}}export default GradientColorRange;