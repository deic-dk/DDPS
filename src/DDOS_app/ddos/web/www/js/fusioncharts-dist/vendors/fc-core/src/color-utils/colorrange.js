import{ComponentInterface}from'../component-interface';import ColorBucket from'./color-bucket';import GradientColorRange from'./gradient-color-range';import{componentFactory,toRaphaelColor,isIE,pluckNumber,dehashify,pluck,getLightColor,getValidColor}from'../lib';function getOppositeColor(a){return getLightColor(a,1)}function getValidHexColor(a){return getValidColor(a||DEF_COLOR)||DEF_COLOR}let UNDEF,TRACKER_FILL='rgba(192,192,192,'+(isIE?.002:1e-6)+')',PERCENT_STR='%',DEF_COLOR='#000000',legendManager=function(){function a(a){var c,d,e,f=b.getFromEnv('number-formatter');for(c=0,d=a.length;c<d;c++)(e=a[c].maxvalue,!!e)&&(a[c].maxvalue=f.getCleanValue(e))}var b,c={};return c.legendCarpetConf={spreadFactor:.85,allowDrag:!1,captionAlignment:'center',padding:{v:3,h:3},style:{fill:'#e4d9c1',stroke:'#c4b89d'}},c.legendCaptionConf={spreadFactor:.2,padding:{v:2,h:2},style:{fill:'#786B50',fontFamily:'sans-serif',fontSize:'12px',fontWeight:'bold',fontStyle:'normal'},bound:{style:{stroke:'none'}}},c.legendBodyConf={spreadFactor:.8,padding:{v:2,h:2},bound:{style:{stroke:'none'}}},c.legendAxisConf={legendAxisHeight:11,spreadFactor:.4,padding:{v:1,h:1},style:{stroke:'none',"stroke-opacity":0,"stroke-width":1},line:{grooveLength:3,offset:8,style:{stroke:'rgba(255, 255, 255, 0.65)',"stroke-width":1.5}},shadow:{style:{stroke:'none',fill:toRaphaelColor({FCcolor:{alpha:'25,0,0',angle:360,color:'000000,FFFFFF,FFFFFF',ratio:'0,30,40'}})}},bound:{style:{stroke:'none'}}},c.sliderGroupConf={showTooltip:1,outerCircle:{rFactor:1.4,style:{fill:TRACKER_FILL,stroke:'#757575',"stroke-width":3}},innerCircle:{rFactor:.65,style:{fill:TRACKER_FILL,stroke:'#FFFFFF'}}},c.axisTextItemConf={spreadFactor:.3,padding:{v:1,h:1},style:{fill:'#786B50',fontFamily:'sans-serif',fontSize:'12px',fontWeight:'normal',fontStyle:'normal'}},{init:function(a){b=a.chart},legacyDataParser:function(c,d){var e,f,g,h,i,j,k,l,m,n,o,p,q=Math.max,r=Math.min,s={},t=b.getFromEnv('number-formatter'),u=b.getFromEnv('dataSource'),v=u.dataset,w=u.data;if(d=d||{},!c)return!1;for('maps'===b.defaultDatasetType&&(d.min===UNDEF||d.max===UNDEF)?(d={min:1/0,max:-Infinity},w&&w.forEach(a=>{d.min=r(d.min,pluckNumber(a.value,d.min)),d.max=q(d.max,pluckNumber(a.value,d.min))})):'HeatMap'===b.getName()&&(d.min===UNDEF||d.max===UNDEF)&&(d={min:1/0,max:-Infinity},v.forEach(a=>{a.data&&a.data.forEach(a=>{d.min=r(d.min,pluckNumber(a.value,d.min)),d.max=q(d.max,pluckNumber(a.value,d.max))})})),s.mapByPercent=o=!!pluckNumber(c.mapbypercent,0),e=c.color||[],c.minvalue===UNDEF&&(c.minvalue=d.min===UNDEF?0:o?0:d.min),c.maxvalue===UNDEF&&(c.maxvalue=d.max===UNDEF?100:o?100:d.max),(c.maxvalue===c.minvalue||d.min===1/0||d.max===-Infinity)&&(c.minvalue=0,c.maxvalue=100),p=!1,(i=0,k=e.length);i<k;i++)if(e[i].maxvalue){p=!0;break}for(p||(e=[]),g=c.code,l=s.colorRange=[],s.gradient=!!pluckNumber(c.gradient,1),e.length?g=getValidHexColor(g):(g?(h=getValidHexColor(g),g=getValidHexColor()):(g=getValidHexColor(),h=getOppositeColor(g)),e.push({code:h,maxvalue:c.maxvalue,label:UNDEF})),a(e),e=e.sort(function(a,b){return a.maxvalue-b.maxvalue}),m=n=c.minvalue&&t.getCleanValue(c.minvalue),n=(m!==UNDEF||null!==m)&&(o?m+PERCENT_STR:t.legendValue(m)),l.push({code:dehashify(g),value:m,displayValue:n,label:c.startlabel}),(i=0,k=e.length);i<k;i++)(f=e[i],j=getValidHexColor(f.code||f.color),m=n=f.maxvalue,!isNaN(parseInt(m,10)))&&(n=(m!==UNDEF||null!==m)&&(o?m+PERCENT_STR:t.legendValue(m)),l.push({code:dehashify(j),value:m,displayValue:n,label:f.label||f.displayvalue}));return l[l.length-1].label=c.endlabel||f.label,s},getDefaultConf:function(a){return c[a]}}}();class ColorRange extends ComponentInterface{constructor(){super(),this.datasource={},this.config.legendItemIds=[]}configure(){let a,b,c,d=this,e=this.getFromEnv('chart'),f='maps'===e.defaultDatasetType,g='TreeMap'===e.getName(),h=this.getFromEnv('dataSource').chart.mapbycategory,i=e.getFromEnv('number-formatter'),j=e.config.showLegend,k=e.getChildren('colorRange')&&e.getChildren('colorRange')[0];e.addToEnv('colorManager',d),d.datasource=e.getFromEnv('dataSource'),a=d.datasource.colorrange,k&&k.remove({instant:!0}),j||(d.config.legendItemIds=[]),b=f?a.gradient&&+a.gradient?'gradient':a.color?'icon':'none':g?'gradient':a.gradient&&'0'!=a.gradient&&!+h?'gradient':'icon';'gradient'===b?(legendManager.init({chart:e}),c=legendManager.legacyDataParser(a),componentFactory(e,GradientColorRange,'colorRange',1,[c]),k=e.getChildren('colorRange')[0],e.addToEnv('colorRange',k),c||(k._dontPlot=!0),d.config.legendItemIds=[],d._configureGradientLegend(k)):'icon'===b?(componentFactory(e,ColorBucket,'colorRange',1,[{colorRange:a,sortLegend:0,mapByCategory:pluckNumber(h,0),defaultColor:'cccccc',numberFormatter:i}]),e.addToEnv('colorRange',e.getChildren('colorRange')[0]),j&&d._addLegendItems()):'none'===b?(e.deleteFromEnv('colorManager'),d.config.legendItemIds=[]):void 0}_configureGradientLegend(a){let b=this,c=b.getFromEnv('chart'),d=c.getFromEnv('gLegend');d&&(d.setColorRange(a),b.addExtEventListener('rangeUpdated',function(a,c){b.fireEvent('legendUpdate',{"original-event":a,maxMinArray:c,component:'gradientlegend'})},d))}_addLegendItems(){let a,b,c,d,e,f=this,g=f.config,h=f.getFromEnv('chart'),j=h.getChildren('legend')[0],k=h.getFromEnv('colorRange'),l=k.colorArr,m=l.length;for(d=0;d<m;d++)e={label:pluck(l[d].label,l[d].displayvalue),datasetObj:l[d],index:d},b=getLightColor(l[d].code,40),a={FCcolor:{color:l[d].code+','+l[d].code+','+b,ratio:'0,70,30',angle:270,alpha:'100,100,100'}},c=j.getItem(g.legendItemIds[d]),c||(g.legendItemIds.push(j.createItem(f)),c=j.getItem(g.legendItemIds[d]),c.addEventListener('fc-click',c.itemClickFn)),c.removeLegendState('hidden'),l[d].legendItemId=c&&c.getId(),c.configure(e),c.setStateCosmetics('default',{symbol:{fill:toRaphaelColor(a),rawFillColor:l[d].code}});for(d=m;d<g.legendItemIds.length;d++)j.disposeItem(g.legendItemIds[d]);g.legendItemIds.splice(m)}legendInteractivity(a){let b=this,c=b.getFromEnv('colorRange').colorArr[a.config.index];b.fireEvent('legendUpdate',{legendItem:a,colorObj:c,component:'legend'})}getColor(a){let b=this,c=b.datasource.colorrange,d=b.datasource.chart.mapbycategory;return!+d&&+c.gradient?{code:b.getColorByValue(a)}:b.getColorObj(a)}getValueRatio(){return this.getFromEnv('colorRange').getValueRatio()}getCumulativeValueRatio(){return this.getFromEnv('colorRange').getCumulativeValueRatio()}getBoxFill(a){return this.getFromEnv('colorRange').getBoxFill(a)}getColorByValue(a){return this.getFromEnv('colorRange').getColorByValue(a)}getColorObj(a){return this.getFromEnv('colorRange').getColorObj(a)}}export default ColorRange;